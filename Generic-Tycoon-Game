local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local human = char:WaitForChild("Humanoid")
local humanoidRootPart = char:WaitForChild("HumanoidRootPart")
local tweenService = game:GetService('TweenService')

UserInputService = game:GetService("UserInputService")
local IsOnMobile = table.find({
	Enum.Platform.IOS,
	Enum.Platform.Android
}, UserInputService:GetPlatform())

local Library = loadstring(game:HttpGetAsync("https://github.com/ActualMasterOogway/Fluent-Renewed/releases/latest/download/Fluent.luau"))()
local SaveManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/SaveManager.luau"))()
local InterfaceManager = loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/ActualMasterOogway/Fluent-Renewed/master/Addons/InterfaceManager.luau"))()

local Window = Library:CreateWindow{
    Title = 'Sodium',
    SubTitle = "IN-DEV",
    TabWidth = 160,
    Size = UDim2.fromOffset(830, 525),
    Resize = true, -- Resize this ^ Size according to a 1920x1080 screen, good for mobile users but may look weird on some devices
    MinSize = Vector2.new(470, 380),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Monokai Classic",
    MinimizeKey = Enum.KeyCode.Insert -- Used when theres no MinimizeKeybind
}

local Tabs = {
    Main = Window:CreateTab{
        Title = "Main",
        Icon = "phosphor-users-bold"
    },
    Humanoid = Window:CreateTab{
        Title = "Humanoid",
        Icon = "phosphor-user-gear-bold"
    },
    Debug = Window:CreateTab{
        Title = "Debug",
        Icon = "phosphor-wrench-bold"
    },
    Settings = Window:CreateTab{
        Title = "Settings",
        Icon = "settings"
    }
}

local Options = Library.Options

--//
local Status = {
    FoodTP = {
        Enabled = false,
        Speed = 1,
        SavedPos = humanoidRootPart.CFrame,
    },
    HumanoidModify = {
        WS = {
            Enabled = false,
            Value = 16,
        },
        JP = {
            Enabled = false,
            Value = 50,
        },
        JH = {
            Enabled = false,
            Value = 7.2,
        },
    }
}

--// Tab Features
do
    local FoodTP_TS = Tabs.Main:CreateSlider("FoodTP_TS", {
        Title = "Tween Speed",
        Description = "Modify Food TP's tween speed. (Low value = faster but easier to cause glitch)",
        Default = Status.FoodTP.Speed,
        Min = 0.7,
        Max = 5,
        Rounding = 1,
        Callback = function(Value)
        end
    }) 

    local FoodTP_Pos = Tabs.Main:CreateButton{
        Title = "Save Position",
        Description = "Save a position, player will teleport back to this position after the Food TP disabled.",
    Callback = function()   
    Status.FoodTP.SavedPos = humanoidRootPart.CFrame
    end
    }

    local FoodTP = Tabs.Main:CreateToggle("FoodTP",
        {Title = "Food TP (Tween)",
            Default = false
        })
    
    


    local WSS = Tabs.Humanoid:CreateSlider("WSS", {
        Title = "Walkspeed Value",
        Description = "Modify character's walkspeed",
        Default = Status.HumanoidModify.WS.Value,
        Min = 0,
        Max = 300,
        Rounding = 1,
        Callback = function(Value)
        end
    })

    local WS = Tabs.Humanoid:CreateToggle("WS",
        {Title = "Walkspeed Enabled",
            Default = false
        })

    local JPS = Tabs.Humanoid:CreateSlider("JPS", {
        Title = "Jumppower Value",
        Description = "Modify character's jumppower",
        Default = Status.HumanoidModify.JP.Value,
        Min = 0,
        Max = 500,
        Rounding = 1,
        Callback = function(Value)
        end
    })

    local JP = Tabs.Humanoid:CreateToggle("JP",
        {Title = "Jumppower Enabled",
            Default = false
        })
    
        local JHS = Tabs.Humanoid:CreateSlider("JHS", {
            Title = "Jumpheight Value",
            Description = "Modify character's jumpheight (Alternative jumppower if jumppower modify not working)",
            Default = Status.HumanoidModify.JH.Value,
            Min = 0,
            Max = 720,
            Rounding = 1,
            Callback = function(Value)
            end
        })
    
        local JH = Tabs.Humanoid:CreateToggle("JH",
            {Title = "Jumpheight Enabled",
                Default = false
            })

            local IY = Tabs.Main:CreateButton{
                Title = "IY",
                Description = "Run Infinite Yield.",
            Callback = function()   
                loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
            end
            }

            local Dex = Tabs.Main:CreateButton{
                Title = "Dex",
                Description = "Run Dex Explorer.",
            Callback = function()   
                if IsOnMobile then
                    loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/Dex/Mobile%20Dex%20Explorer.txt"))()
                else
                    Window:Dialog{
                        Title = "Dex Explorer",
                        Content = "Choose a version you want to run.",
                        Buttons = {
                            {
                                Title = "V2",
                                Callback = function()
                                    loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
                                end
                            },
                            {
                                Title = "V3",
                                Callback = function()
                                    loadstring(game:HttpGet("https://raw.githubusercontent.com/0017717/bk/refs/heads/main/odex"))()
                                end
                            },
                            {
                                Title = "V3 New",
                                Callback = function()
                                    loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
                                end
                            },
                            {
                                Title = "Babyhamsta's V3",
                                Callback = function()
                                    loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()
                                end
                            },
                        }
                    }
                end
            end
            }
            local HS = Tabs.Main:CreateButton{
                Title = "HTTPSpy",
                Description = "Run HTTP Spy.",
            Callback = function()   
                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Httpspy/main/httpspy.txt"))()
            end
            }
            local REGUI = Tabs.Main:CreateButton{
                Title = "RemoteEvent",
                Description = "Run RemoteEvent trigger GUI.",
            Callback = function()   
                Window:Dialog{
                    Title = "RemoteEvent",
                    Content = "Choose a type you want to run.",
                    Buttons = {
                        {
                            Title = "FireServer",
                            Callback = function()
                                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremotefireserver.lua"))()
                            end
                        },
                        {
                            Title = "InvokeClient",
                            Callback = function()
                                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremoteinvokeclient.lua"))()
                            end
                        },
                        {
                            Title = "InvokeServer",
                            Callback = function()
                                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameinvokeserver.lua"))()
                            end
                        },
                        {
                            Title = "All",
                            Callback = function()
                                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremotefireserver.lua"))()
                                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameremoteinvokeclient.lua"))()
                                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gameinvokeserver.lua"))()
                            end
                        },
                    }
                }
            end
        }
            local SPV = Tabs.Main:CreateButton{
                Title = "Dimension Viewer",
                Description = "View related places of current place.",
            Callback = function()   
                loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/subplaceviewer.txt"))()
            end
            }
            

    --// Callbacks
    FoodTP:OnChanged(
        function()
            Status.FoodTP.Enabled = Options.FoodTP.Value
        end
    )
	FoodTP_TS:OnChanged(
        function()
            Status.FoodTP.Speed = Options.FoodTP_TS.Value
        end
    )
    WS:OnChanged(
        function()
            Status.HumanoidModify.WS.Enabled = Options.WS.Value
        end
    )
    JP:OnChanged(
        function()
            Status.HumanoidModify.JP.Enabled = Options.JP.Value
        end
    )
    JH:OnChanged(
        function()
            Status.HumanoidModify.JH.Enabled = Options.JH.Value
        end
    )


--// Functions
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

local path = game.workspace.Growables


task.spawn(function()
    local hasTeleported = false
    while task.wait() do
        if Status.FoodTP.Enabled then
            
            for i, v in path:GetChildren() do
                if v:IsA("BasePart") then -- Crucial check to only tween to BaseParts.  Otherwise, you'll try to tween to folders, etc. which will cause errors.
                    local targetCFrame = v.CFrame * CFrame.new(0, 2, 0) -- Move 2 studs up
                    local tween = tweenService:Create(humanoidRootPart, TweenInfo.new(Options.FoodTP_TS.Value), {CFrame = targetCFrame})
                    tween:Play()
                    tween.Completed:Wait() -- Wait for tween to finish before moving on to the next part
                    tweenService:Create(humanoidRootPart, TweenInfo.new(0), {CFrame = a}):Play()
                end
            end
            hasTeleported = false
        elseif not hasTeleported then
            local a = Status.FoodTP.SavedPos
        tweenService:Create(humanoidRootPart, TweenInfo.new(0), {CFrame = a}):Play()
         hasTeleported = true
    end
        end
    end
)

    task.spawn(function()
        while task.wait() do
            if Status.HumanoidModify.WS.Enabled then
                human.WalkSpeed = Options.WSS.Value
            end
        end
    end
    )
    task.spawn(function()
        while task.wait() do
            if Status.HumanoidModify.JP.Enabled then
                human.JumpPower = Options.JPS.Value
            end
        end
    end
    )
    task.spawn(function()
        while task.wait() do
            if Status.HumanoidModify.JH.Enabled then
                human.JumpHeight = Options.JHS.Value
                human.UseJumpPower = false
            else
                human.UseJumpPower = true
            end
        end
    end
    )
    
end


SaveManager:SetLibrary(Library)
InterfaceManager:SetLibrary(Library)

SaveManager:IgnoreThemeSettings()

SaveManager:SetIgnoreIndexes{}

InterfaceManager:SetFolder("Sodium")
SaveManager:SetFolder("Sodium/gtg")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Library:Notify{
    Title = "Sodium",
    Content = "The script has been loaded.",
    Duration = 5
}

SaveManager:LoadAutoloadConfig()
